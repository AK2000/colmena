from moldesign.simulate import compute_zpe
from moldesign.simulate.thermo import compute_frequencies, c, mass_weighted_hessian
from qcelemental.physical_constants import constants
from qcelemental.models import Molecule
from pytest import fixture
import numpy as np


# Hessian for H20 @ B3LYP//3-21g
hessian = [[0.59864998089, -0.023872817474, 0.096390061551, -0.51788160522, -0.014200919652, 0.057345175764,
            -0.08076842682, 0.038073740992, -0.15373511845],
           [-0.023872817474, 0.030535745863, -0.12329721927, 0.00092624964526, -0.0026358340622, 0.010653747898,
            0.022946571708, -0.027899892782, 0.11264347887],
           [0.096390061551, -0.12329721927, 0.49785412113, -0.0037359472563, 0.01065386777, -0.043015963392,
            -0.092653995355, 0.1126433589, -0.45483826958],
           [-0.51788160522, 0.00092624964526, -0.0037359472563, 0.53584452204, 0.001727328583, -0.0069789269048,
            -0.017962995469, -0.0026535538826, 0.010714774647],
           [-0.014200919652, -0.0026358340622, 0.01065386777, 0.001727328583, 0.0028392407196, -0.01147553719,
            0.012473620025, -0.00020346095859, 0.0008216046248],
           [0.057345175764, 0.010653747898, -0.043015963392, -0.0069789269048, -0.01147553719, 0.046333710441,
            -0.050366366778, 0.00082172446014, -0.003317554927],
           [-0.08076842682, 0.022946571708, -0.092653995355, -0.017962995469, 0.012473620025, -0.050366366778,
            0.098731413175, -0.035420140291, 0.14302015409],
           [0.038073740992, -0.027899892782, 0.1126433589, -0.0026535538826, -0.00020346095859, 0.00082172446014,
            -0.035420140291, 0.028103295374, -0.11346513211],
           [-0.15373511845, 0.11264347887, -0.45483826958, 0.010714774647, 0.0008216046248, -0.003317554927,
            0.14302015409, -0.11346513211, 0.45815595142]]

@fixture()
def mol():
    return Molecule.from_data('''3
0 1 H2O
O                     0.920231316365     0.049000772521     0.070979682290
H                     1.881301444747     0.060889214818     0.022968412944
H                     0.646507239087     0.270790011900    -0.824568094291''')


def test_mass_hessian(mol):
    mhessian = mass_weighted_hessian(np.array(hessian), mol)
    assert np.isclose(mhessian[:2, :2] * 1000, [[37.4275, -1.49253], [-1.49253, 1.9091]]).all()
    assert np.isclose(mhessian[-2:, -2:] * 1000, [[27.8825, -112.585], [-112.585, 454.598]], atol=1e-1).all()


def test_frequencies(mol):
    freqs = compute_frequencies(np.array(hessian), mol)

    # Convert them to wavenumbers to compare to NWChem output
    freqs = constants.ureg.Quantity(freqs, 'Hz')
    wavenumbers = freqs / c
    assert np.isclose(wavenumbers.to('1/cm')[:3].magnitude, [3912.473, 3806.488, 1655.924]).all()


def test_zpe(mol):
    zpe = compute_zpe(np.array(hessian), mol)
    assert np.isclose(zpe, 0.021347, atol=1e-5)
